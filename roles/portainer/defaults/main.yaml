container_directory: "/opt/containers"
container_ssl_directory: "{{ container_directory }}/ssl"

traefik_name: "traefik"
traefik_version: "latest"
traefik_fqdn: "{{ traefik_name }}-{{ ansible_facts.fqdn }}"
traefik_directory: "{{ container_directory }}/{{ traefik_name }}"
traefik_compose_path: "{{ traefik_directory }}/traefik-compose.yaml"
traefik_http_name: "web"
traefik_port_http: "80"
traefik_https_name: "websecure"
traefik_port_https: "443"
traefik_port_metrics: "8082"
traefik_config_path: "/etc/traefik/traefik.yaml"
traefik_network_name: "{{ traefik_name }}_proxy"

portainer_name: "portainer"
portainer_fqdn: "{{ portainer_name }}-{{ ansible_facts.fqdn }}"
portainer_version: "latest"
portainer_port_ui: "9000"
portainer_directory: "{{ container_directory }}/{{ portainer_name }}"
portainer_compose_path: "{{ portainer_directory }}/portainer-compose.yaml"
portainer_url_admin_check: "https://{{ portainer_fqdn }}/api/users/admin/check"
portainer_url_admin_create: "https://{{ portainer_fqdn }}/api/users/admin/init"

# supported
portainer_arch:
  - "arm64"
  - "x86_64"

# defaults, these should be overriden in your inventory file
portainer_admin_username: "admin"
portainer_admin_password:  "pleasechangeme"

# watchtower
watchtower_name: "watchtower"
watchtower_directory: "{{ container_directory }}/{{ watchtower_name }}"
watchtower_compose_path: "{{ watchtower_directory }}/watchtower-compose.yaml"
watchtower_port_metrics: "8081"
watchtower_hostname: "{{ watchtower_name }}-{{ ansible_facts.fqdn }}"
watchtower_cleanup: "true"
watchtower_metrics_enabled: "true"
watchtower_rolling_restart: "true"
watchtower_timeout: "60s"
watchtower_no_startup_message: "true"
watchtower_notifications_level: "error"
watchtower_notification_urls: "{{ watchtower_notification_urls | default('') }}"
watchtower_http_api_token: "watchTowerToken"

# Portainer Stacks
portainer_stacks_path: "{{ container_directory }}/stacks"

unifi_controller_enabled: "{{ portainer_stacks.unifi_controller.enabled |  default('false') }}"
unifi_controller_name: "unifi-controller"
unifi_controller_image_name: "linuxserver/unifi-controller"
unifi_controller_image_version: "7.5.187"
unifi_controller_fqdn: "{{ portainer_stacks.unifi_controller.hostname | default(unifi_controller_name) }}"
unifi_controller_ui_port: "8443"
unifi_controller_volume_path: "{{ container_directory }}/{{ unifi_controller_name }}/data"

homepage_enabled: "{{ portainer_stacks.homepage.enabled | default('false') }}"
homepage_name: "homepage"
homepage_image_name: "ghcr.io/gethomepage/homepage"
homepage_image_version: "latest"
homepage_fqdn: "{{ portainer_stacks.homepage.hostname | default(homepage_name) }}"
homepage_ui_port: "3000"
homepage_volume_path: "{{ container_directory }}/{{ homepage_name }}/data"

nextcloud_enabled: "{{ portainer_stacks.nextcloud.enabled | defualt('false') }}"
nextcloud_name: "nextcloud"
nextcloud_image_name: "nextcloud"
nextcloud_image_version: "25.0.2"
nextcloud_fqdn: "{{ portainer_stacks.nextcloud.hostname | default(nextcloud_name) }}"
nextcloud_ui_port: "80"
nextcloud_domain: "{{ portainer_stacks.nextcloud.domain }}"
nextcloud_volume_path: "{{ container_directory }}/{{ nextcloud_name }}/data"

uptime_kuma_enabled: "{{ portainer_stacks.uptime_kuma.enabled | default('false') }}"
uptime_kuma_name: "uptime-kuma"
uptime_kuma_image_name: "louislam/uptime-kuma"
uptime_kuma_image_version: "1.23.3"
uptime_kuma_fqdn: "{{ portainer_stacks.uptime_kuma.hostname | default(uptime_kuma_name) }}"
uptime_kuma_ui_port: "3001"
uptime_kuma_volume_path: "{{ container_directory }}/{{ uptime_kuma_name }}/data"

prometheus_enabled: "{{ portainer_stacks.prometheus.enabled | default('false') }}"
prometheus_name: "prometheus"
prometheus_image_name: "prom/prometheus"
prometheus_image_version: "v2.47.2"
prometheus_fqdn: "{{ portainer_stacks.prometheus.hostname | default(prometheus_name) }}"
prometheus_ui_port: "9090"
prometheus_volume_path: "{{ container_directory }}/{{ prometheus_name }}/data"